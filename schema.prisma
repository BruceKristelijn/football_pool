generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           Int      @id @default(autoincrement())
  display_name String
  google_id    String   @unique
  image_url    String
  createdAt    DateTime @default(now())

  predictions Prediction[]
  pools       Pool[]
  ownedPools  Pool[]       @relation("UserOwnedPools")
}

model Prediction {
  id                Int      @id @default(autoincrement())
  matchId           Int
  user              User     @relation(fields: [userId], references: [id])
  userId            Int
  halftimeScoreHome Int
  halftimeScoreAway Int
  fulltimeScoreHome Int
  fulltimeScoreAway Int
  createdAt         DateTime @default(now())
  match             Match    @relation(fields: [matchId], references: [id])

  @@unique([matchId, userId])
}

model Pool {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  inviteOnly  Boolean
  users       User[]
  ownerId     Int
  owner       User    @relation("UserOwnedPools", fields: [ownerId], references: [id])

  @@index([ownerId])
}

model Match {
  id                Int      @id @default(autoincrement())
  competitionId     Int
  competitionName   String
  seasonId          Int
  matchday          Int
  stage             String
  utcDate           DateTime
  status            String
  homeTeamId        Int
  homeTeamName      String
  awayTeamId        Int
  awayTeamName      String
  halftimeScoreHome Int
  halftimeScoreAway Int
  fulltimeScoreHome Int
  fulltimeScoreAway Int
  createdAt         DateTime @default(now())

  predictions Prediction[]
}
